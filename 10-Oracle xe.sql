-----------------------SQL ORACLE-----------------

----------------------------------FUNCIOOOOOOONES----------------
--FUNCIONES DE CADENA:

     --LOWER: Convierte a minúsculas las cadenas de caracteres mayúsculas o mixtas.

     --UPPER: Convierte a mayúsculas las cadenas de caracteres minúsculas o mixtas.

     --INITCAP: Convierte la primera letra de una cadena a mayúsculas y el resto a minúsculas

select * from EMP where LOWER (oficio) = 'analista';
UPDATE emp set oficio = 'analiSTa' where emp_no = 7902;
select * from EMP where LOWER (oficio) = 'analista';

--estamos poniendo valores estáticos: "analista"
--también podríamos includr valores dinamicos, por lo que tendríamos que convertir las dos comparaciones

select * from emp where upper (oficio) = '&dato'; --no aparece nada
select * from emp where upper (oficio) = upper ('&dato');

--EN ORACLE TENEMOS LA POSIBILIDAD DE CONCATENAR TEXTOS EN UNA SOLA CULUMNA (CAMPO CALCULADO)
--SE UTILIZA EL SIMBOLO | | (ALTGR+ 1) PARA CONCATENAR
--MOSTRAMOS EN UNA SOLA COL EL APELLIDO Y EL OFICIO DE LOS EMP

SELECT APELLIDO || OFICIO AS DESCRIPCION FROM EMP;
SELECT APELLIDO || ' ' || OFICIO AS DESCRIPCION FROM EMP; --DAMOS UN ESPACIO

--LA FUNCION INITCAP MUESTRA CADA PALABRA DE UNA FRASE CON LA PRIMERA LETRA EN MAYUSCULAS

SELECT INITCAP (OFICIO) AS INITC FROM EMP;
SELECT INITCAP (APELLIDO || ' '|| OFICIO) AS DESCRIPCION FROM EMP;

--CONCAT 
SELECT CONCAT ('NUESTRO EMPLEADO ES...' , APELLIDO) AS RESULTADO FROM EMP;

--SUBSTR RECUPERA UNA SUBCADENA DE UN TEXTO
    --Sintaxis:	

/*SUBSTR (Cad, m[,n])

    • Cad: cadena de caracteres 
    • m representa el número de orden del carácter de comienzo.
    • n representa el número de caracteres a recuperar.

Si se omite n devuelve la cadena desde la posición indicada por m.*/

SELECT SUBSTR ('FLORERO' , 1, 4)as DATO from DUAL; --se incluye el primer dato en el conteo
SELECT SUBSTR ('FLORERO' , 4)as DATO from DUAL --desde el indicado en adelante
SELECT SUBSTR ('FLORERO' , 1, 4)as DATO from DUAL; --funciona en oracle

--mostrar los emp cuyo apellido empieza con "S"

select * from EMP where APELLIDO like 's%';
select substr(APELLIDO, 1, 1) as UNAletra from EMP;
select * from emp where substr(apellido, 1, 1) = 's'; 

--SUBSTR ES MÁS EFICIENTE QUE LIKE!!!

--LENGTH NOS DEVUELVE EL Nº DE CARACTERES
SELECT LENGTH('LIBRO')AS LONGITUD FROM dual;

--MOSTRAR APELLIDOS DE EMPLEADOS DE 4 LETRAS
SELECT * FROM EMP WHERE APELLIDO LIKE '____';
SELECT * FROM EMP WHERE LENGTH (APELLIDO)= 4;


--INSTR BUSCA UN TEXTO Y DEVUELVE SU POSICIÓN. CUENTA ESPACIOS
SELECT INSTR ('BENITO', 'N') AS POSICION FROM DUAL;
SELECT INSTR ('BENITO', 'NI') AS POSICION FROM DUAL; --SIGUE SIENDO 3ª POSICIÓN
SELECT INSTR ('BENITO', 'NI') AS POSICION FROM DUAL;--SI NO LO ENCUENTRA NOS DA 0
SELECT INSTR ('ORACLE MOLA', 'L') AS POSICION FROM DUAL;-- SI SE REPITE CUENTA LA PRIMERA

--SI DESEAMOS VALIDAR UN MAIL
SELECT * FROM DUAL WHERE INSTR ('WWW.@MAIL', '@') > 0;

--LPAD/RPAD AÑADE CARACTERES A LA IZQ/DERECHA, TANTOS COMO QUERAMOS
SELECT * FROM EMP;
--QUIERO QUE EL CAMPO DEPT_NO LLEGE A 5 CARACTERES Y LO RELLENAMOS CON $
 SELECT LPAD (DEPT_NO, 5, 'S') FROM EMP;
  SELECT RPAD (DEPT_NO, 5, 'S') FROM EMP;
  
        --FUNCIONES NUMERICAS
  --ROUND: REDONDEA LOS DECIMALES
  SELECT ROUND (45.923) AS REDONDEO FROM DUAL; --REDONDEA AL ALZA Y DEVUELVE UN ENTERO
  SELECT ROUND (45.123) AS REDONDEO FROM DUAL;--A LA BAJA
    SELECT ROUND (45.923, 2) AS REDONDEO FROM DUAL; --INDICACMOS LOS DECIMALES
    SELECT ROUND (45.929, 2) AS REDONDEO FROM DUAL;
    --TRUNC, LO MISMO PERO OBVIA EL REDONDEO
    SELECT TRUNC (45.923) AS REDONDEO FROM DUAL;
    SELECT TRUNC (45.123) AS REDONDEO FROM DUAL;
    SELECT ROUND (45.923, 2) AS REDONDEO FROM DUAL;
     SELECT ROUND (45.929, 2) AS REDONDEO FROM DUAL;
          SELECT ROUND (45.929, -1) AS REDONDEO FROM DUAL;
     
     
     --MOD: DEVUELVE EL RESTO DE LA DIVISIÓN ENTRE DOS NUM
     --AVERIGUAR SI Nº ES PAR. RESTO 0 ES PAR, EN OTROS EJEMPLOS PARA BUSCAR MÚLTIPLOS
     
     SELECT MOD (13,2) AS RESTO FROM DUAL;
    SELECT MOD (14,2) AS RESTO FROM DUAL;
    
    --MOSTRAR EMP CUYO SALARIO SEA PAR
    
    SELECT MOD (SALARIO,2) AS SALARIOPAR FROM EMP;
    
    --MODIFIACAMOS A LOS DEL DEP 20 PARA QUE HAYA IMPARES Y CONSULTAMOS CON WHERE
UPDATE EMP SET SALARIO = SALARIO + 1 WHERE DEPT_NO=20;
    SELECT MOD (SALARIO,2) AS SALARIOPAR FROM EMP;
    SELECT * FROM EMP WHERE MOD (SALARIO, 2 )=1;
    SELECT * FROM EMP WHERE MOD (SALARIO, 2 )=0;
    
    --OPERADORES ARITMÉTICOS CON FECHAS
    --TENEMOS UNA FUNCIÓN PARA AVERIGUAR LA FECHA ACTUAL DEL SERVIDOR
    --EN EL SERVIDOR: SYSDATE
    SELECT SYSDATE AS FECHAACTUAL FROM DUAL;
    SELECT SYSDATE + 30 AS FECHA FROM DUAL;
    SELECT SYSDATE + 300000 AS FECHA FROM DUAL;

--FUNCIONES DE FECHA
--MONTHS_BETWEEN: DEVUELVE LOS MESES ENTRE DOS FECHAS, LA PRIMERA HA DE SER LA MAYOR
--MOSTRAR CUANTOS MESES LLEVAS LOS EMPLEADOS DADOS DE ALTA EN LA EMPRESA

SELECT APELLIDO, MONTHS_BETWEEN(SYSDATE, FECHA_ALT) AS MESES FROM EMP;

--ADD_MONTHS
 SELECT ADD_MONTHS (SYSDATE, 5) AS DENTRO5 FROM DUAL;
 
 --NEXTDAY
 --MOSTRAR EL PRÓXIMO LUNES
 SELECT NEXT_DAY (SYSDATE, 'LUNES') AS PROXIMOLUNES FROM DUAL;
 SELECT NEXT_DAY (SYSDATE, 'MIÉRCOLES') AS PROXIMOLUNES FROM DUAL;
 
 --LAST_dAY
 select last_day (sysdate) as findemes from dual;
 select last_day (sysdate) -3 as pagarnominas from dual;
 
 --ROUND: REDONDEA SEGÚN EL FORMATO
 --ROUND(FECHA,(FORMATO))
--EMPLEADOS REDONDEADOS LA FECHA AL MES
SELECT APELLIDO, FECHA_ALT, ROUND(FECHA_ALT, 'MM') AS ROUNDMES FROM EMP;
SELECT APELLIDO, FECHA_ALT, ROUND(FECHA_ALT, 'YY') AS ROUNDAÑO FROM EMP;

--TRUNC TRUNCA LA FECHA EN FUNCION DEL FORMATO
SELECT APELLIDO, FECHA_ALT, TRUNC(FECHA_ALT, 'MM') AS TRUNCMES FROM EMP;--REDONDEA A LA BAJA
SELECT APELLIDO, FECHA_ALT, TRUNC(FECHA_ALT, 'YY') AS TRUNCAÑO FROM EMP;

--FUNCIONES DE CONVERSIÓN
--TO_CHAR RECUPERA FORMATOS, COMO CONVERTIR FECHA ESPAÑOLA A AMERICANA
SELECT APELLIDO, FECHA_ALT FROM EMP;
SELECT APELLIDO, FECHA_ALT, TO_CHAR(FECHA_ALT,'MM,DD,YYYY') AS FORMATO FROM EMP;
SELECT APELLIDO, FECHA_ALT, TO_CHAR(FECHA_ALT,'MM/DD/YYYY') AS FORMATO FROM EMP;
SELECT TO_CHAR(SYSDATE, 'DAY MONTH') AS NOMBREMES FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'DAY MONTH, WW') AS NOMBREMES FROM DUAL; --WW SELECCIONA LA SEMANA
--FORMATO NUMEROS
SELECT TO_CHAR(7458, '0000L') AS ZERO FROM DUAL;--EURO
SELECT TO_CHAR(7458, '0000$') AS ZERO FROM DUAL;--DOLLAR (DELANTE)
--HORA DEL SISTEMA
SELECT TO_CHAR(SYSDATE, 'HH24:MI:SS') AS HORASISTEMA FROM DUAL;
--SI QUEREMOS INCUIR TEXTOS ENRE TO_CHAR Y LOS FORMATOS SE REALIZA CON " " DENTRO DE LAS SIMPLES
SELECT TO_CHAR(SYSDATE, '"HOY ES " DD') AS FORMATO FROM DUAL;
SELECT TO_CHAR(SYSDATE, '"HOY ES " DAY "DE" MONTH') AS FORMATO FROM DUAL;
SELECT TO_CHAR(SYSDATE, '"HOY ES " DD "DE" MM') AS FORMATO FROM DUAL;

--FUNCIONES DE CONVERSIÓN
SELECT '08/04/2025' AS FECHA FROM DUAL;
SELECT TO_DATE('08/04/2025') AS FECHA FROM DUAL;
SELECT '08/04/2025' +2 AS FECHA FROM DUAL; --NO FUNCIONA PORQUE NO PUEDE CONVERTIR UN STRING


SELECT '12' + 2 AS RESULTADO FROM DUAL;
SELECT TO_NUMBER ('12') + 2 AS RESULTADO FROM DUAL;

---------------------FUNCIONES GENERALES-------------------.
--NVL SIRVE PARA EVITAR LOS NULOS Y SUSTITUIRLOS
--SI LO ENCUENTRA LOS SUSTITUYE, SI NO, MUESTRA EL VALOR
SELECT * FROM EMP;
--REY TIENE COMISION NULL
--MOSTRAR APELLIDO, SALARIO Y COMISION DE TODOS LOS EMP
SELECT APELLIDO, SALARIO, COMISION FROM EMP;
--PODEMOS INDICAR QUE EN LUGAR DE PONER NULL, ESCRIBA OTRO VALOR
--EL VALOR DEBE SER CORRESPONDIENTE AL TIPO DE DATO (NUMBER-NUMBER) (STRING-STRING)
--AL SER UN CAMPO CALCULADO HAY QUE PONERLE ALIAS
SELECT APELLIDO, SALARIO, NVL (COMISION, -1) AS COMISION FROM EMP;
--SALARIO+COMISION DE TODOS LOS EMPLEADOS
SELECT APELLIDO, SALARIO + COMISION AS TOTAL FROM EMP;--REY SALE NULL, TODO LO QUE TOQUE NULL SE VUELVE NULL
SELECT APELLIDO, SALARIO + NVL (COMISION, 0) AS TOTAL FROM EMP;

--DECODE: FUNCION PROPIA DE ORACLE, HACE LO MISMO QUE  "CASE"
--MOSTRAR TURNO ('MAÑANA','TARDE','NOCHE') DE LA PLANTILLA
SELECT APELLIDO, TURNO FROM PLANTILLA;
--UNE LOS PARES M-MAÑANA, TARDE, T...
SELECT APELLIDO, DECODE (TURNO, 'M', 'MAÑANA', 'T', 'TARDE') AS TURNO FROM PLANTILLA;--LOS NULLS SON LOS QUE NO TOCA
--EL ÚLTIMO ES EL "CASE" DEL SWITCH, PUEDE SER IMPAR
SELECT APELLIDO, DECODE (TURNO, 'M', 'MAÑANA', 'T', 'TARDE', 'NOCHE') AS TURNO FROM PLANTILLA;--

--QUIERO SABER LA FECHA DEL PROXIMO MIERCOLES, QUE HAY FUTBOL
SELECT NEXT_DAY(SYSDATE, 'MIÉRCOLES') AS CHAMPIONS FROM DUAL;
--QUIERO VER LA FECHA COMPLETA: EL MIÉRCOLES 09 DE ABRIL JUEGA EL MADRID
SELECT TO_CHAR(
NEXT_DAY(SYSDATE, 'MIÉRCOLES')+2,
'DD//MM/YYY') AS CHAMPIONS FROM DUAL;

SELECT TO_CHAR(
NEXT_DAY(SYSDATE, 'MIÉRCOLES')+2,
'"EL DÍA " DAY DD " JUEGA EL mADRID"') AS CHAMPIONS FROM DUAL;

--HAY QUE SUMAR 2 A SYSDATE
SELECT TO_CHAR(
NEXT_DAY(SYSDATE + 2, 'MIÉRCOLES'),
'"EL DÍA " DAY DD" JUEGA EL mADRID"') AS CHAMPIONS FROM DUAL;

SELECT TRUNC (ROUND(156.00, -1),-1) FROM DUAL;

SELECT TRUNC (160.00, -1) FROM DUAL;
